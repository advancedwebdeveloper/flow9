// Â© Copyright 2014 Area9 Technologies.

import tropic/tropic;
import ds/array_diff;
import algorithms;

export {
	// Monitors an array of Tropics and presents them relatively efficiently on the screen - only changed elements in the array are
	// updated on the screen

	SelectTLines(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic;
	SelectTCols(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic;
	SelectTColsA(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic;
	SelectTGroup(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic;
}

SelectTLines(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic {
	SelectTropicArray(values, makeTropicFn, TLinesCombiner());
}

SelectTCols(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic {
	SelectTropicArray(values, makeTropicFn, TColsCombiner());
}

SelectTColsA(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic {
	SelectTropicArray(values, makeTropicFn, TColsACombiner());
}

SelectTGroup(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic) -> Tropic {
	SelectTropicArray(values, makeTropicFn, TGroupCombiner());
}

SelectTropicArray(values : Transform<[?]>, makeTropicFn : (index :  Transform<int>, id : int, ?) -> Tropic, combiner : TCombiner) -> Tropic {
	ids : ref [int] = ref [];

	getNextId = \ -> {
		id = fold(sort(^ids), -1, \acc, id -> if (id == acc + 1) id else acc) + 1;
		ids := arrayPush(^ids, id);

		id;
	}

	TDynamicGroup2(
		fmapiu(values, \i, v -> Pair(makeTropicFn(i, getNextId(), v), [])),
		combiner
	)
}