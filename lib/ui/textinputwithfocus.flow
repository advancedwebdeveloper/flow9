// Â© Copyright 2013 Area9 Technologies.

import form/form;
import ui/focus;

export {
    /// Creates a TextInput that updates the global keyboard focus id.
    textInputWithFocus(state : [TextInputState], listeners : [TextInputEvent], stateAccess : [StateAccess]) -> Form;
}

textInputWithFocus(states, listeners, stateAccess) {
    focusId = getFocusId();
    if (focusId == -1) {
        println("A TextInput should not have a focus id of -1.");
    }

    onShowHide = \ -> {
        initialFocus = exists(states, \state ->
            switch(state) {
                Focus(focus): focus;
                default: false;
            }
        );
        if (initialFocus) {
            updateKeyboardFocus(focusId);
        }
        \ -> {
            keyboardFocusDies(focusId)
        }
    }
    Constructor(
        Access([AccessRole("textbox")], TextInput(
            states, 
            concat(
                [
                    FocusIn(\ -> updateKeyboardFocus(focusId)),
                    FocusOut(releaseKeyboardFocus)
                ], 
                listeners
            ), 
            stateAccess
        )), 
        onShowHide
    );
}
